{"ast":null,"code":"const getTotalDay2 = function (stringValues) {\n  var elfBag = {\n    red: 12,\n    green: 13,\n    blue: 14\n  };\n  //stringValues = \"Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green\";\n  let total = 0;\n\n  //console.log(stringValues.length);\n\n  for (let i = 0; i < stringValues.length; i++) {\n    stringValues = stringValues[i].split(/:|;/);\n    //console.log(stringValues);\n    var gameDeck = [];\n    for (var element in stringValues) {\n      gameDeck.push(stringValues[element]);\n    }\n    var game = gameDeck.shift();\n    //console.log(\"Game: \"+game);\n    var bag = {\n      red: 0,\n      green: 0,\n      blue: 0\n    };\n    for (var hands in gameDeck) {\n      var deck = [];\n      deck = gameDeck[hands].split(\",\");\n      for (var cubes in deck) {\n        deck[cubes] = deck[cubes].trimStart();\n        var [num, color] = deck[cubes].split(\" \");\n        bag[color] = Number(bag[color]) + Number(num);\n      }\n    }\n    var possible = false;\n    for (const [key, value] of Object.entries(bag)) {\n      //console.log(`Key: ${key}, Value: ${value}`);\n      if (elfBag[key] > value) possible = true;\n    }\n    //console.log(possible);\n    if (possible) {\n      //console.log(game);\n      var [game, nbr] = game.split(\" \");\n      total = total + Number(nbr);\n    }\n  }\n  return total;\n};\nexport default getTotalDay2;","map":{"version":3,"names":["getTotalDay2","stringValues","elfBag","red","green","blue","total","i","length","split","gameDeck","element","push","game","shift","bag","hands","deck","cubes","trimStart","num","color","Number","possible","key","value","Object","entries","nbr"],"sources":["/Users/patricefiset/development/ReactApp/adventofcodeday/src/day2.js"],"sourcesContent":["const getTotalDay2 = function(stringValues) {\n\n    var elfBag = { red: 12, green: 13, blue: 14 };\n    //stringValues = \"Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green\";\n    let total = 0;\n\n    //console.log(stringValues.length);\n\n    for (let i = 0; i < stringValues.length; i++) {\n        stringValues = stringValues[i].split(/:|;/);\n        //console.log(stringValues);\n        var gameDeck = [];\n        for (var element in stringValues) {\n            gameDeck.push(stringValues[element]);\n        }\n        var game = gameDeck.shift();\n        //console.log(\"Game: \"+game);\n        var bag = { red: 0, green: 0, blue: 0 };\n\n        for (var hands in gameDeck) {\n            var deck = [];\n            deck = gameDeck[hands].split(\",\");\n\n            for (var cubes in deck) {\n                deck[cubes] = deck[cubes].trimStart();\n                var [num, color] = deck[cubes].split(\" \");\n                bag[color] = Number(bag[color])+Number(num);\n            }\n        }\n\n        var possible = false;\n\n        for (const [key, value] of Object.entries(bag)) {\n            //console.log(`Key: ${key}, Value: ${value}`);\n            if (elfBag[key] > value)\n                possible = true;\n        }\n        //console.log(possible);\n        if (possible) {\n            //console.log(game);\n            var [game, nbr] = game.split(\" \")\n            total = total + Number(nbr);\n        }\n    }\n    return total;\n}\n\nexport default getTotalDay2;\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,SAAAA,CAASC,YAAY,EAAE;EAExC,IAAIC,MAAM,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC7C;EACA,IAAIC,KAAK,GAAG,CAAC;;EAEb;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1CN,YAAY,GAAGA,YAAY,CAACM,CAAC,CAAC,CAACE,KAAK,CAAC,KAAK,CAAC;IAC3C;IACA,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,OAAO,IAAIV,YAAY,EAAE;MAC9BS,QAAQ,CAACE,IAAI,CAACX,YAAY,CAACU,OAAO,CAAC,CAAC;IACxC;IACA,IAAIE,IAAI,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC;IAC3B;IACA,IAAIC,GAAG,GAAG;MAAEZ,GAAG,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAC;IAEvC,KAAK,IAAIW,KAAK,IAAIN,QAAQ,EAAE;MACxB,IAAIO,IAAI,GAAG,EAAE;MACbA,IAAI,GAAGP,QAAQ,CAACM,KAAK,CAAC,CAACP,KAAK,CAAC,GAAG,CAAC;MAEjC,KAAK,IAAIS,KAAK,IAAID,IAAI,EAAE;QACpBA,IAAI,CAACC,KAAK,CAAC,GAAGD,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAAC,CAAC;QACrC,IAAI,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC;QACzCM,GAAG,CAACM,KAAK,CAAC,GAAGC,MAAM,CAACP,GAAG,CAACM,KAAK,CAAC,CAAC,GAACC,MAAM,CAACF,GAAG,CAAC;MAC/C;IACJ;IAEA,IAAIG,QAAQ,GAAG,KAAK;IAEpB,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACZ,GAAG,CAAC,EAAE;MAC5C;MACA,IAAIb,MAAM,CAACsB,GAAG,CAAC,GAAGC,KAAK,EACnBF,QAAQ,GAAG,IAAI;IACvB;IACA;IACA,IAAIA,QAAQ,EAAE;MACV;MACA,IAAI,CAACV,IAAI,EAAEe,GAAG,CAAC,GAAGf,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC;MACjCH,KAAK,GAAGA,KAAK,GAAGgB,MAAM,CAACM,GAAG,CAAC;IAC/B;EACJ;EACA,OAAOtB,KAAK;AAChB,CAAC;AAED,eAAeN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}