{"ast":null,"code":"var _jsxFileName = \"/Users/patricefiset/development/ReactApp/adventofcodeday1/src/App.js\";\nimport logo from './pluginIcon.png';\nimport './App.css';\nimport raw from './input.txt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getContent() {\n  //var inputContent = \"hello\";\n\n  /*\n  fetch(raw)\n  .then(r => r.text())\n  .then(data => {\n    return data.split(/\\r?\\n/);\n    //console.log('text decoded:', data);\n    //return inputContent;\n  });\n  */\n\n  const file = raw;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  this.setState({\n    fileName: file.name,\n    fileContent: reader.result\n  });\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"adventofcode.com/2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://adventofcode.com/2023/day/1\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Day 1: Trebuchet?!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: [\"List of strings \", getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","raw","jsxDEV","_jsxDEV","getContent","file","reader","FileReader","readAsText","setState","fileName","name","fileContent","result","App","className","children","src","alt","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/patricefiset/development/ReactApp/adventofcodeday1/src/App.js"],"sourcesContent":["import logo from './pluginIcon.png';\nimport './App.css';\nimport raw from './input.txt';\n\nfunction getContent() {\n  //var inputContent = \"hello\";\n\n  /*\n  fetch(raw)\n  .then(r => r.text())\n  .then(data => {\n    return data.split(/\\r?\\n/);\n    //console.log('text decoded:', data);\n    //return inputContent;\n  });\n  */\n\n  const file = raw;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  this.setState({fileName: file.name, fileContent: reader.result});\n\n}\n\n\nfunction App() {\n\n   return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code>adventofcode.com/2023</code> \n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://adventofcode.com/2023/day/1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Day 1: Trebuchet?!\n        </a>\n      </header>\n      <div className=\"App-body\">\n        List of strings {getContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,kBAAkB;AACnC,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,UAAUA,CAAA,EAAG;EACpB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,IAAI,GAAGJ,GAAG;EAChB,MAAMK,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAC/BD,MAAM,CAACE,UAAU,CAACH,IAAI,CAAC;EACvB,IAAI,CAACI,QAAQ,CAAC;IAACC,QAAQ,EAAEL,IAAI,CAACM,IAAI;IAAEC,WAAW,EAAEN,MAAM,CAACO;EAAM,CAAC,CAAC;AAElE;AAGA,SAASC,GAAGA,CAAA,EAAG;EAEZ,oBACCX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAQY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bb,OAAA;QAAKc,GAAG,EAAEjB,IAAK;QAACe,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAR,QAAA,EAAAS,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDlB,OAAA;QAAAa,QAAA,eACEb,OAAA;UAAAa,QAAA,EAAM;QAAqB;UAAAN,QAAA,EAAAS,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAX,QAAA,EAAAS,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACJlB,OAAA;QACEY,SAAS,EAAC,UAAU;QACpBO,IAAI,EAAC,qCAAqC;QAC1CC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QAAAR,QAAA,EAC1B;MAED;QAAAN,QAAA,EAAAS,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAX,QAAA,EAAAS,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTlB,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAC,QAAA,GAAC,kBACR,EAACZ,UAAU,CAAC,CAAC;IAAA;MAAAM,QAAA,EAAAS,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAX,QAAA,EAAAS,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACI,EAAA,GAvBQX,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}