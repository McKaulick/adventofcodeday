{"ast":null,"code":"var _jsxFileName = \"/Users/patricefiset/development/ReactApp/adventofcodeday1/src/App.js\";\nimport logo from './pluginIcon.png';\nimport './App.css';\nimport filePath from './input.txt';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getContent() {\n  //const [ text, setText ] = useState();\n\n  /*\n  fetch(filePath)\n  .then(r => r.text())\n  .then(text => {\n    console.log(text);\n  });\n  */\n\n  const fileReader = new FileReader();\n  fileReader.onload = event => {\n    const fileText = event.target.result;\n    const lines = fileText.split('\\n');\n    // do something with the lines here...\n  };\n  const file = new Blob([filePath], {\n    type: 'text/plain'\n  });\n  fileReader.readAsText(file);\n\n  //return lines;\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"adventofcode.com/2023\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://adventofcode.com/2023/day/1\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Day 1: Trebuchet?!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"App-body\",\n      children: [\"List of strings \", getContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","filePath","useState","jsxDEV","_jsxDEV","getContent","fileReader","FileReader","onload","event","fileText","target","result","lines","split","file","Blob","type","readAsText","App","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","rel","_c","$RefreshReg$"],"sources":["/Users/patricefiset/development/ReactApp/adventofcodeday1/src/App.js"],"sourcesContent":["import logo from './pluginIcon.png';\nimport './App.css';\nimport filePath from './input.txt';\nimport { useState } from 'react';\n\nfunction getContent() {\n  //const [ text, setText ] = useState();\n\n  /*\n  fetch(filePath)\n  .then(r => r.text())\n  .then(text => {\n    console.log(text);\n  });\n  */\n\n  const fileReader = new FileReader();\n  fileReader.onload = event => {\n    const fileText = event.target.result;\n    const lines = fileText.split('\\n');\n    // do something with the lines here...\n  };\n\n  const file = new Blob([filePath], {type: 'text/plain'});\n  fileReader.readAsText(file);\n\n  //return lines;\n}\n\nfunction App() {\n\n   return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <code>adventofcode.com/2023</code> \n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://adventofcode.com/2023/day/1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Day 1: Trebuchet?!\n        </a>\n      </header>\n      <body className=\"App-body\">\n        List of strings {getContent()}\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,kBAAkB;AACnC,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,aAAa;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EACpB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC;EACnCD,UAAU,CAACE,MAAM,GAAGC,KAAK,IAAI;IAC3B,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,MAAM;IACpC,MAAMC,KAAK,GAAGH,QAAQ,CAACI,KAAK,CAAC,IAAI,CAAC;IAClC;EACF,CAAC;EAED,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACf,QAAQ,CAAC,EAAE;IAACgB,IAAI,EAAE;EAAY,CAAC,CAAC;EACvDX,UAAU,CAACY,UAAU,CAACH,IAAI,CAAC;;EAE3B;AACF;AAEA,SAASI,GAAGA,CAAA,EAAG;EAEZ,oBACCf,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAQgB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BjB,OAAA;QAAKkB,GAAG,EAAEtB,IAAK;QAACoB,SAAS,EAAC,UAAU;QAACG,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClDvB,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,EAAM;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACJvB,OAAA;QACEgB,SAAS,EAAC,UAAU;QACpBQ,IAAI,EAAC,qCAAqC;QAC1CjB,MAAM,EAAC,QAAQ;QACfkB,GAAG,EAAC,qBAAqB;QAAAR,QAAA,EAC1B;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACTvB,OAAA;MAAMgB,SAAS,EAAC,UAAU;MAAAC,QAAA,GAAC,kBACT,EAAChB,UAAU,CAAC,CAAC;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACG,EAAA,GAvBQX,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}