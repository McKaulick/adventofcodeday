{"ast":null,"code":"function getPossibility(deck) {\n  for (var cubes in deck) {\n    deck[cubes] = deck[cubes].trimStart();\n    var [num, color] = deck[cubes].split(\" \");\n    //bag[color] = Number(bag[color])+Number(num);\n    //console.log(`Color: ${color}, #: ${num}`);\n    if (elfBag[color] >= num) {\n      possible = true;\n    } else {\n      return false;\n    }\n  }\n  return possible;\n}\nconst getTotalDay2 = function (stringValues) {\n  var elfBag = {\n    red: 12,\n    green: 13,\n    blue: 14\n  };\n  stringValues = \"Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green\";\n  let total = 0;\n\n  //console.log(stringValues.length);\n\n  //for (let i = 0; i < stringValues.length; i++) {\n  var thisValue = stringValues.split(/:|;/);\n  //console.log(stringValues);\n  var gameDeck = [];\n  for (var element in thisValue) {\n    gameDeck.push(thisValue[element]);\n  }\n  var game = gameDeck.shift();\n  //console.log(\"Game: \"+game);\n  //var bag = { red: 0, green: 0, blue: 0 };\n\n  for (var hands in gameDeck) {\n    var deck = [];\n    deck = gameDeck[hands].split(\",\");\n    console.log(getPossibility(deck));\n\n    /*\n    if (possible === true) {\n        //console.log(nbr);\n        var [game, nbr] = game.split(\" \")\n        total = total + Number(nbr);\n    }\n    */\n  }\n\n  /* \n  for (const [key, value] of Object.entries(bag)) {\n      var possible = true;\n      //console.log(`Key: ${key}, Value: ${value}`);\n      //console.log(`${elfBag[key]}--${value}`);\n      if (elfBag[key] < value)\n          possible = false;\n  }\n  //console.log(possible);\n  if (possible === true) {\n      console.log(game);\n      var [game, nbr] = game.split(\" \")\n      total = total + Number(nbr);\n  }\n  */\n  //}\n  return total;\n};\nexport default getTotalDay2;","map":{"version":3,"names":["getPossibility","deck","cubes","trimStart","num","color","split","elfBag","possible","getTotalDay2","stringValues","red","green","blue","total","thisValue","gameDeck","element","push","game","shift","hands","console","log"],"sources":["/Users/patricefiset/development/ReactApp/adventofcodeday/src/day2.js"],"sourcesContent":["function getPossibility (deck) { \n    for (var cubes in deck) {\n        deck[cubes] = deck[cubes].trimStart();\n        var [num, color] = deck[cubes].split(\" \");\n        //bag[color] = Number(bag[color])+Number(num);\n        //console.log(`Color: ${color}, #: ${num}`);\n        if (elfBag[color] >= num) {\n            possible = true;\n        }\n        else {\n            return false;\n        }\n    }\n    return possible; \n}\n\nconst getTotalDay2 = function(stringValues) {\n\n    var elfBag = { red: 12, green: 13, blue: 14 };\n    stringValues = \"Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green\";\n    let total = 0;\n\n    //console.log(stringValues.length);\n\n    //for (let i = 0; i < stringValues.length; i++) {\n        var thisValue = stringValues.split(/:|;/); \n        //console.log(stringValues);\n        var gameDeck = [];\n        for (var element in thisValue) {\n            gameDeck.push(thisValue[element]);\n        }\n        var game = gameDeck.shift();\n        //console.log(\"Game: \"+game);\n        //var bag = { red: 0, green: 0, blue: 0 };\n\n        for (var hands in gameDeck) {\n            var deck = [];\n            deck = gameDeck[hands].split(\",\");\n\n            console.log(getPossibility(deck));\n\n            /*\n            if (possible === true) {\n                //console.log(nbr);\n                var [game, nbr] = game.split(\" \")\n                total = total + Number(nbr);\n           }\n           */\n        }\n\n        /* \n        for (const [key, value] of Object.entries(bag)) {\n            var possible = true;\n            //console.log(`Key: ${key}, Value: ${value}`);\n            //console.log(`${elfBag[key]}--${value}`);\n            if (elfBag[key] < value)\n                possible = false;\n        }\n        //console.log(possible);\n        if (possible === true) {\n            console.log(game);\n            var [game, nbr] = game.split(\" \")\n            total = total + Number(nbr);\n        }\n        */\n    //}\n    return total;\n}\n\nexport default getTotalDay2;\n  "],"mappings":"AAAA,SAASA,cAAcA,CAAEC,IAAI,EAAE;EAC3B,KAAK,IAAIC,KAAK,IAAID,IAAI,EAAE;IACpBA,IAAI,CAACC,KAAK,CAAC,GAAGD,IAAI,CAACC,KAAK,CAAC,CAACC,SAAS,CAAC,CAAC;IACrC,IAAI,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGJ,IAAI,CAACC,KAAK,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;IACzC;IACA;IACA,IAAIC,MAAM,CAACF,KAAK,CAAC,IAAID,GAAG,EAAE;MACtBI,QAAQ,GAAG,IAAI;IACnB,CAAC,MACI;MACD,OAAO,KAAK;IAChB;EACJ;EACA,OAAOA,QAAQ;AACnB;AAEA,MAAMC,YAAY,GAAG,SAAAA,CAASC,YAAY,EAAE;EAExC,IAAIH,MAAM,GAAG;IAAEI,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC7CH,YAAY,GAAG,wDAAwD;EACvE,IAAII,KAAK,GAAG,CAAC;;EAEb;;EAEA;EACI,IAAIC,SAAS,GAAGL,YAAY,CAACJ,KAAK,CAAC,KAAK,CAAC;EACzC;EACA,IAAIU,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIC,OAAO,IAAIF,SAAS,EAAE;IAC3BC,QAAQ,CAACE,IAAI,CAACH,SAAS,CAACE,OAAO,CAAC,CAAC;EACrC;EACA,IAAIE,IAAI,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC;EAC3B;EACA;;EAEA,KAAK,IAAIC,KAAK,IAAIL,QAAQ,EAAE;IACxB,IAAIf,IAAI,GAAG,EAAE;IACbA,IAAI,GAAGe,QAAQ,CAACK,KAAK,CAAC,CAACf,KAAK,CAAC,GAAG,CAAC;IAEjCgB,OAAO,CAACC,GAAG,CAACvB,cAAc,CAACC,IAAI,CAAC,CAAC;;IAEjC;AACZ;AACA;AACA;AACA;AACA;AACA;EACQ;;EAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA,OAAOa,KAAK;AAChB,CAAC;AAED,eAAeL,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}