{"ast":null,"code":"const getTotalDay2 = function (stringValues) {\n  stringValues = \"Game 1: 9 red, 2 green, 13 blue; 10 blue, 2 green, 13 red; 8 blue, 3 red, 6 green; 5 green, 2 red, 1 blue\";\n  stringValues = stringValues.split(/:|;/);\n  //console.log(stringValues);\n  var gameDeck = [];\n  for (var element in stringValues) {\n    gameDeck.push(stringValues[element]);\n  }\n  var game = gameDeck.shift();\n  //console.log(\"Game: \"+game);\n\n  for (var hands in gameDeck) {\n    var deck = [];\n    deck = gameDeck[hands].split(\",\");\n  }\n\n  //console.log(typeof(deck));\n  //deck = deck.split(\",\");\n\n  for (var cubes in deck) {\n    deck[cubes].replace(\" \", \",\");\n    //console.log(\"Element \"+cubes+\": \"+deck[cubes]);\n    console.log(deck[cubes].slice(0, 0));\n    //const object = Object.fromEntries(deck[cubes]);\n    //console.log(object);\n  }\n\n  //console.log(\"Deck: \"+gameDeck);\n\n  /*\n  let stringCards = stringValues[1].split(\",\");\n  stringCards = stringValues[1].split(\",\");\n  for (const property in stringCards) {\n      console.log(`${property}: ${stringCards[property]}`);\n  }\n  */\n\n  //return stringValues;\n};\nexport default getTotalDay2;","map":{"version":3,"names":["getTotalDay2","stringValues","split","gameDeck","element","push","game","shift","hands","deck","cubes","replace","console","log","slice"],"sources":["/Users/patricefiset/development/ReactApp/adventofcodeday/src/day2.js"],"sourcesContent":["const getTotalDay2 = function(stringValues) {\n    \n    stringValues = \"Game 1: 9 red, 2 green, 13 blue; 10 blue, 2 green, 13 red; 8 blue, 3 red, 6 green; 5 green, 2 red, 1 blue\";\n    stringValues = stringValues.split(/:|;/);\n    //console.log(stringValues);\n    var gameDeck = [];\n    for (var element in stringValues) {\n        gameDeck.push(stringValues[element]);\n    }\n    var game = gameDeck.shift();\n    //console.log(\"Game: \"+game);\n\n    for (var hands in gameDeck) {\n        var deck = [];\n        deck = gameDeck[hands].split(\",\");\n    }\n\n    //console.log(typeof(deck));\n    //deck = deck.split(\",\");\n\n    for (var cubes in deck) {\n        deck[cubes].replace(\" \", \",\")\n        //console.log(\"Element \"+cubes+\": \"+deck[cubes]);\n        console.log(deck[cubes].slice(0, 0));\n        //const object = Object.fromEntries(deck[cubes]);\n        //console.log(object);\n    }\n   \n    //console.log(\"Deck: \"+gameDeck);\n    \n    /*\n    let stringCards = stringValues[1].split(\",\");\n    stringCards = stringValues[1].split(\",\");\n    for (const property in stringCards) {\n        console.log(`${property}: ${stringCards[property]}`);\n    }\n    */\n    \n    //return stringValues;\n}\n\nexport default getTotalDay2;\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,SAAAA,CAASC,YAAY,EAAE;EAExCA,YAAY,GAAG,2GAA2G;EAC1HA,YAAY,GAAGA,YAAY,CAACC,KAAK,CAAC,KAAK,CAAC;EACxC;EACA,IAAIC,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIC,OAAO,IAAIH,YAAY,EAAE;IAC9BE,QAAQ,CAACE,IAAI,CAACJ,YAAY,CAACG,OAAO,CAAC,CAAC;EACxC;EACA,IAAIE,IAAI,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC;EAC3B;;EAEA,KAAK,IAAIC,KAAK,IAAIL,QAAQ,EAAE;IACxB,IAAIM,IAAI,GAAG,EAAE;IACbA,IAAI,GAAGN,QAAQ,CAACK,KAAK,CAAC,CAACN,KAAK,CAAC,GAAG,CAAC;EACrC;;EAEA;EACA;;EAEA,KAAK,IAAIQ,KAAK,IAAID,IAAI,EAAE;IACpBA,IAAI,CAACC,KAAK,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IAC7B;IACAC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,KAAK,CAAC,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC;IACA;EACJ;;EAEA;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI;AACJ,CAAC;AAED,eAAed,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}