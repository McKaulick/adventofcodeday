{"ast":null,"code":"const getTotalDay2 = function (stringValues) {\n  var elfBag = {\n    red: 12,\n    green: 13,\n    blue: 14\n  };\n  //stringValues = \"Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green\";\n  let total = 0;\n\n  //console.log(stringValues.length);\n\n  for (let i = 0; i < stringValues.length; i++) {\n    var thisValue = stringValues[i].split(/:|;/);\n    //console.log(stringValues);\n    var gameDeck = [];\n    for (var element in thisValue) {\n      gameDeck.push(thisValue[element]);\n    }\n    var game = gameDeck.shift();\n    //console.log(\"Game: \"+game);\n    //var bag = { red: 0, green: 0, blue: 0 };\n\n    for (var hands in gameDeck) {\n      var deck = [];\n      deck = gameDeck[hands].split(\",\");\n      var possible = false;\n      for (var cubes in deck) {\n        deck[cubes] = deck[cubes].trimStart();\n        var [num, color] = deck[cubes].split(\" \");\n        //bag[color] = Number(bag[color])+Number(num);\n        console.log(`Color: ${color}, #: ${num}`);\n        if (elfBag[color] < num) {\n          possible = true;\n        }\n        console.log(\"Game: \" + game + \": \" + possible);\n      }\n      if (possible === true) {\n        var [game, nbr] = game.split(\" \");\n        total = total + Number(nbr);\n      }\n    }\n\n    /* \n    for (const [key, value] of Object.entries(bag)) {\n        var possible = true;\n        //console.log(`Key: ${key}, Value: ${value}`);\n        //console.log(`${elfBag[key]}--${value}`);\n        if (elfBag[key] < value)\n            possible = false;\n    }\n    //console.log(possible);\n    if (possible === true) {\n        console.log(game);\n        var [game, nbr] = game.split(\" \")\n        total = total + Number(nbr);\n    }\n    */\n  }\n  return total;\n};\nexport default getTotalDay2;","map":{"version":3,"names":["getTotalDay2","stringValues","elfBag","red","green","blue","total","i","length","thisValue","split","gameDeck","element","push","game","shift","hands","deck","possible","cubes","trimStart","num","color","console","log","nbr","Number"],"sources":["/Users/patricefiset/development/ReactApp/adventofcodeday/src/day2.js"],"sourcesContent":["const getTotalDay2 = function(stringValues) {\n\n    var elfBag = { red: 12, green: 13, blue: 14 };\n    //stringValues = \"Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green\";\n    let total = 0;\n\n    //console.log(stringValues.length);\n\n    for (let i = 0; i < stringValues.length; i++) {\n        var thisValue = stringValues[i].split(/:|;/); \n        //console.log(stringValues);\n        var gameDeck = [];\n        for (var element in thisValue) {\n            gameDeck.push(thisValue[element]);\n        }\n        var game = gameDeck.shift();\n        //console.log(\"Game: \"+game);\n        //var bag = { red: 0, green: 0, blue: 0 };\n\n        for (var hands in gameDeck) {\n            var deck = [];\n            deck = gameDeck[hands].split(\",\");\n\n            var possible = false;\n\n            for (var cubes in deck) {\n                deck[cubes] = deck[cubes].trimStart();\n                var [num, color] = deck[cubes].split(\" \");\n                //bag[color] = Number(bag[color])+Number(num);\n                console.log(`Color: ${color}, #: ${num}`);\n                if (elfBag[color] < num) {\n                    possible = true;\n                }\n                console.log(\"Game: \"+game+\": \"+possible);\n            }\n            if (possible === true) {\n                var [game, nbr] = game.split(\" \")\n                total = total + Number(nbr);\n           }\n        }\n\n        /* \n        for (const [key, value] of Object.entries(bag)) {\n            var possible = true;\n            //console.log(`Key: ${key}, Value: ${value}`);\n            //console.log(`${elfBag[key]}--${value}`);\n            if (elfBag[key] < value)\n                possible = false;\n        }\n        //console.log(possible);\n        if (possible === true) {\n            console.log(game);\n            var [game, nbr] = game.split(\" \")\n            total = total + Number(nbr);\n        }\n        */\n    }\n    return total;\n}\n\nexport default getTotalDay2;\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG,SAAAA,CAASC,YAAY,EAAE;EAExC,IAAIC,MAAM,GAAG;IAAEC,GAAG,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EAC7C;EACA,IAAIC,KAAK,GAAG,CAAC;;EAEb;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,IAAIE,SAAS,GAAGR,YAAY,CAACM,CAAC,CAAC,CAACG,KAAK,CAAC,KAAK,CAAC;IAC5C;IACA,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,OAAO,IAAIH,SAAS,EAAE;MAC3BE,QAAQ,CAACE,IAAI,CAACJ,SAAS,CAACG,OAAO,CAAC,CAAC;IACrC;IACA,IAAIE,IAAI,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC;IAC3B;IACA;;IAEA,KAAK,IAAIC,KAAK,IAAIL,QAAQ,EAAE;MACxB,IAAIM,IAAI,GAAG,EAAE;MACbA,IAAI,GAAGN,QAAQ,CAACK,KAAK,CAAC,CAACN,KAAK,CAAC,GAAG,CAAC;MAEjC,IAAIQ,QAAQ,GAAG,KAAK;MAEpB,KAAK,IAAIC,KAAK,IAAIF,IAAI,EAAE;QACpBA,IAAI,CAACE,KAAK,CAAC,GAAGF,IAAI,CAACE,KAAK,CAAC,CAACC,SAAS,CAAC,CAAC;QACrC,IAAI,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGL,IAAI,CAACE,KAAK,CAAC,CAACT,KAAK,CAAC,GAAG,CAAC;QACzC;QACAa,OAAO,CAACC,GAAG,CAAE,UAASF,KAAM,QAAOD,GAAI,EAAC,CAAC;QACzC,IAAInB,MAAM,CAACoB,KAAK,CAAC,GAAGD,GAAG,EAAE;UACrBH,QAAQ,GAAG,IAAI;QACnB;QACAK,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACV,IAAI,GAAC,IAAI,GAACI,QAAQ,CAAC;MAC5C;MACA,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACnB,IAAI,CAACJ,IAAI,EAAEW,GAAG,CAAC,GAAGX,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC;QACjCJ,KAAK,GAAGA,KAAK,GAAGoB,MAAM,CAACD,GAAG,CAAC;MAChC;IACH;;IAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA,OAAOnB,KAAK;AAChB,CAAC;AAED,eAAeN,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}